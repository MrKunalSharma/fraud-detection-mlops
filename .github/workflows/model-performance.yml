name: Model Performance Check

on:
  pull_request:
    paths:
      - 'src/model_training.py'
      - 'src/data_preprocessing.py'
      - 'models/**'

jobs:
  performance:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check model performance
      run: |
        python -c "
import json
import sys

# Load model metrics
try:
    with open('models/model_metrics.json', 'r') as f:
        metrics = json.load(f)
    
    # Check performance thresholds
    best_model = metrics.get('model_name', '')
    model_metrics = metrics.get('metrics', {}).get(best_model, {})
    
    accuracy = model_metrics.get('accuracy', 0)
    f1_score = model_metrics.get('f1_score', 0)
    
    print(f'Model: {best_model}')
    print(f'Accuracy: {accuracy:.4f}')
    print(f'F1-Score: {f1_score:.4f}')
    
    # Enforce minimum performance
    if accuracy < 0.95:
        print('❌ Accuracy below threshold (0.95)')
        sys.exit(1)
    if f1_score < 0.80:
        print('❌ F1-Score below threshold (0.80)')
        sys.exit(1)
        
    print('✅ Model performance meets requirements')
    
except Exception as e:
    print(f'Error checking model performance: {e}')
    sys.exit(1)
"
